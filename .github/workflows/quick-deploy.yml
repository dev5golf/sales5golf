name: Quick Deploy (Manual)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  quick-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: |
          if [ "${{ github.event.inputs.environment }}" = "prod" ]; then
            npm run build:prod
          else
            npm run build:dev
          fi

      - name: Deploy to Firebase Hosting (Dev)
        if: github.event.inputs.environment == 'dev'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEV }}'
          channelId: 'dev'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID_DEV }}'

      - name: Deploy to Firebase Hosting (Staging)
        if: github.event.inputs.environment == 'staging'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_STAGING }}'
          channelId: 'staging'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID_STAGING }}'

      - name: Deploy to Firebase Hosting (Prod)
        if: github.event.inputs.environment == 'prod'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROD }}'
          channelId: 'prod'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID_PROD }}'
